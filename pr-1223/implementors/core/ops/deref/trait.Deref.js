(function() {var implementors = {};
implementors["gear_backend_common"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"gear_backend_common/struct.TrimmedString.html\" title=\"struct gear_backend_common::TrimmedString\">TrimmedString</a>","synthetic":false,"types":["gear_backend_common::TrimmedString"]}];
implementors["gear_core"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"gear_core/memory/struct.PageBuf.html\" title=\"struct gear_core::memory::PageBuf\">PageBuf</a>","synthetic":false,"types":["gear_core::memory::PageBuf"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"gear_core/message/struct.Dispatch.html\" title=\"struct gear_core::message::Dispatch\">Dispatch</a>","synthetic":false,"types":["gear_core::message::common::Dispatch"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"gear_core/message/struct.IncomingDispatch.html\" title=\"struct gear_core::message::IncomingDispatch\">IncomingDispatch</a>","synthetic":false,"types":["gear_core::message::incoming::IncomingDispatch"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"gear_core/message/struct.StoredDispatch.html\" title=\"struct gear_core::message::StoredDispatch\">StoredDispatch</a>","synthetic":false,"types":["gear_core::message::stored::StoredDispatch"]}];
implementors["gstd"] = [{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"gstd/prelude/ops/trait.Deref.html\" title=\"trait gstd::prelude::ops::Deref\">Deref</a> for <a class=\"struct\" href=\"gstd/lock/mutex/struct.MutexGuard.html\" title=\"struct gstd::lock::mutex::MutexGuard\">MutexGuard</a>&lt;'_, T&gt;","synthetic":false,"types":["gstd::lock::mutex::MutexGuard"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"gstd/prelude/ops/trait.Deref.html\" title=\"trait gstd::prelude::ops::Deref\">Deref</a> for <a class=\"struct\" href=\"gstd/lock/rwlock/struct.RwLockReadGuard.html\" title=\"struct gstd::lock::rwlock::RwLockReadGuard\">RwLockReadGuard</a>&lt;'_, T&gt;","synthetic":false,"types":["gstd::lock::rwlock::RwLockReadGuard"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"gstd/prelude/ops/trait.Deref.html\" title=\"trait gstd::prelude::ops::Deref\">Deref</a> for <a class=\"struct\" href=\"gstd/lock/rwlock/struct.RwLockWriteGuard.html\" title=\"struct gstd::lock::rwlock::RwLockWriteGuard\">RwLockWriteGuard</a>&lt;'_, T&gt;","synthetic":false,"types":["gstd::lock::rwlock::RwLockWriteGuard"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()